{"ast":null,"code":"import _defineProperty from \"/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/src/components/addPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// IMPORTS ⬇︎\nimport React from 'react';\nimport '../styles/profile.css';\nimport axios from 'axios';\nexport default class AddPost extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postInfo: {\n        useame: localStorage.getItem('username'),\n        username: localStorage.getItem('username'),\n        post: '',\n        picture: ''\n      },\n      errorMessage: ''\n    };\n\n    this.post = event => {\n      const token = localStorage.getItem('jwt');\n      event.preventDefault();\n      console.log(this.state.postInfo);\n      axios.post('http://localhost:3000/posts', this.state.postInfo, {\n        header: {\n          Authorization: token\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.props.history.push('/Posts');\n      }).catch(error => {\n        console.log('Error creating post', error);\n        this.setState({\n          errorMessage: 'Create post error, please try again.'\n        });\n      });\n    };\n\n    this.changeHandler = event => {\n      event.preventDefault();\n      this.setState({\n        postInfo: _objectSpread({}, this.state.postInfo, {\n          [event.target.name]: event.target.value\n        })\n      });\n    };\n\n    this.clearError = event => {\n      event.preventDefault();\n      this.setState({\n        errorMessage: ''\n      });\n    };\n\n    this.getFileInfo = event => {\n      this.setState({\n        file: event.target.files[0]\n      });\n    };\n\n    this.ok = () => {\n      console.log('file');\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"FormContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.errorMessage === '' ? null : React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(\"button\", {\n      onClick: this.clearError,\n      className: \"ex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"x\")), React.createElement(\"form\", {\n      onSubmit: this.post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Create Post\"), React.createElement(\"input\", {\n      id: \"postDescription\",\n      type: \"text\",\n      name: \"postDescription\",\n      value: this.state.postInfo.postDescription,\n      placeholder: \"Say anything . . .\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"picture\",\n      type: \"text\",\n      name: \"picture\",\n      value: this.state.postInfo.picture,\n      placeholder: \"Picture url\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Post \")));\n  }\n\n}","map":{"version":3,"sources":["/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/src/components/addPost.js"],"names":["React","axios","AddPost","Component","state","postInfo","useame","localStorage","getItem","username","post","picture","errorMessage","event","token","preventDefault","console","log","header","Authorization","then","res","data","props","history","push","catch","error","setState","changeHandler","target","name","value","clearError","getFileInfo","file","files","ok","render","postDescription"],"mappings":"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","sourcesContent":["\n// IMPORTS ⬇︎\nimport React from 'react';\nimport '../styles/profile.css'\nimport axios from 'axios';\n\nexport default class AddPost extends React.Component {\n\n    state = {\n        postInfo: {\n            useame: localStorage.getItem( 'username' ),\n            username: localStorage.getItem( 'username' ),\n            post: '',\n            picture: ''\n        },\n        errorMessage: ''\n    }\n\n    post = event => {\n        const token = localStorage.getItem( 'jwt' )\n        event.preventDefault();\n        console.log( this.state.postInfo )\n        axios.post( 'http://localhost:3000/posts' , this.state.postInfo , { header: { Authorization: token } } )\n            .then(res => {\n\n                console.log( res.data )\n                this.props.history.push( '/Posts' )\n            })\n            .catch(error => {\n                console.log( 'Error creating post' , error )\n                this.setState({ errorMessage: 'Create post error, please try again.' })\n            })\n    }\n\n    changeHandler = event => {\n        event.preventDefault();\n        this.setState({\n            postInfo: {\n                ...this.state.postInfo,\n                [event.target.name]: event.target.value\n            }\n        });\n    };\n\n    clearError = event => {\n        event.preventDefault();\n        this.setState({ errorMessage: '' })\n    }\n\n    getFileInfo = event => {\n        this.setState({ file: event.target.files[0] })\n    }\n\n    ok = () => {\n        console.log( 'file' )\n    }\n\n    render() {\n        return (\n            <div className ='FormContainer'>\n                \n                { this.state.errorMessage === '' ? null : (\n                    <div className = 'errorMessage'>\n                        <p>{ this.state.errorMessage }</p>\n                        <button onClick = { this.clearError } className = 'ex'>x</button>\n                    </div>\n                ) }\n\n                <form onSubmit = { this.post } >\n\n                    <label>Create Post</label>\n\n                    <input\n                        id = 'postDescription'\n                        type = 'text'\n                        name = 'postDescription'\n                        value = { this.state.postInfo.postDescription }\n                        placeholder = 'Say anything . . .'\n                        onChange = { this.changeHandler }\n                    />\n\n                    <input\n                        id = 'picture'\n                        type = 'text'\n                        name = 'picture'\n                        value = { this.state.postInfo.picture }\n                        placeholder = 'Picture url'\n                        onChange = { this.changeHandler }\n                    />\n\n                    <button type = 'submit' className = 'submitButton' > Post </button>\n\n                </form>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}