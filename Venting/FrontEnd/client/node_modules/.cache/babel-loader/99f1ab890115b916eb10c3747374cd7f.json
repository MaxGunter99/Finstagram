{"ast":null,"code":"import _defineProperty from \"/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/src/components/post.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport axios from 'axios';\nimport '../styles/posts.css';\nimport Back from '../Images/back.jpg';\nimport { Link } from 'react-router-dom';\nexport default class Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      comments: [],\n      comment: {\n        notes: localStorage.getItem('username'),\n        postId: window.location.pathname.toString().replace('/', '').replace('Post', '').replace('/', ''),\n        commentDescription: ''\n      }\n    };\n\n    this.deletePost = () => {\n      const raw = window.location.pathname.toString();\n      const id = raw.replace('/', '').replace('Post', '').replace('/', '');\n      const token = localStorage.getItem('jwt');\n      this.componentDidMount();\n\n      for (var i = 0; i < this.state.post.comments.length; i++) {\n        console.log(this.state.post.comments[i]);\n      } // axios\n      //     .delete(`http://localhost:3000/posts/${id}` , { headers: { Authorization: token }} )\n      //     .then(res => {\n      //         console.log( res.data )\n      //         this.props.history.push( '/Posts' )\n      //     })\n      //     .catch(error => console.error(error));\n\n    };\n\n    this.changeHandler = event => {\n      event.preventDefault();\n      this.setState({\n        comment: _objectSpread({}, this.state.comment, {\n          [event.target.name]: event.target.value\n        })\n      });\n    };\n\n    this.addComment = event => {\n      event.preventDefault();\n      const token = localStorage.getItem('jwt');\n      axios.post(\"http://localhost:3000/comments\", this.state.comment, {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => {\n        console.log('res.data', res.data);\n        this.state.comment.commentDescription = '';\n        this.componentDidMount();\n      }).catch(error => console.error(error));\n    };\n\n    this.deleteComment = x => {\n      console.log(x);\n      let info = {\n        commentDescription: x.commentDescription,\n        notes: x.notes,\n        postId: x.postId\n      };\n      const token = localStorage.getItem('jwt');\n      axios.delete(\"http://localhost:3000/comments/\".concat(x.id), info, {\n        headers: {\n          Authorization: token\n        }\n      }).then(res => {\n        console.log('res.data', res.data);\n        this.componentDidMount();\n      }).catch(error => console.error(error));\n    };\n  }\n\n  componentDidMount() {\n    const raw = window.location.pathname.toString();\n    const id = raw.replace('/', '').replace('Post', '').replace('/', '');\n    const token = localStorage.getItem('jwt');\n    axios.get(\"http://localhost:3000/posts/\".concat(id), {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      console.log(res.data.comments);\n      this.setState({\n        post: res.data\n      });\n    }).catch(error => console.error(error));\n    axios.get(\"http://localhost:3000/posts/\".concat(id, \"/comments\"), {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => {\n      console.log('res.data', res.data);\n      this.setState({\n        comments: res.data\n      });\n    }).catch(error => console.error(error));\n  }\n\n  render() {\n    // const scrollToTop = () => {\n    //     const c = document.documentElement.scrollTop || document.body.scrollTop;\n    //     if (c > 0) {\n    //         window.requestAnimationFrame(scrollToTop);\n    //         window.scrollTo(0, c - c / 8);\n    //     }\n    // };\n    const OnlineUser = localStorage.getItem('username');\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: this.state.post.id,\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.post.username), React.createElement(\"p\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.post.created_at), React.createElement(Link, {\n      to: \"/Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Back,\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), this.state.post.picture === null ? null : React.createElement(\"img\", {\n      src: this.state.post.picture,\n      alt: \"profile\",\n      className: \"Picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"postContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.post.postDescription), this.state.post.username === OnlineUser ? React.createElement(\"div\", {\n      className: \"options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/EditPost/\".concat(this.state.post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Edit\"), \" \"), React.createElement(\"button\", {\n      onClick: () => this.deletePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Delete\")) : null), React.createElement(\"div\", {\n      className: \"commentsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"commentDescription\",\n      type: \"text\",\n      name: \"commentDescription\",\n      value: this.state.comment.commentDescription,\n      placeholder: \"Add Comment\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Done \")), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Comments\"), this.state.comments.map(x => React.createElement(\"div\", {\n      key: x.id,\n      className: \"individual\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"commentContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, x.notes)), React.createElement(\"p\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, x.commentDescription)), React.createElement(\"div\", {\n      className: \"deleteButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, x.notes === OnlineUser ? React.createElement(\"button\", {\n      onClick: () => this.deleteComment(x),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Delete\") : null))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/voidchaser/Projects/Finstagram/Venting/FrontEnd/client/src/components/post.js"],"names":["React","axios","Back","Link","Post","Component","state","post","comments","comment","notes","localStorage","getItem","postId","window","location","pathname","toString","replace","commentDescription","deletePost","raw","id","token","componentDidMount","i","length","console","log","changeHandler","event","preventDefault","setState","target","name","value","addComment","headers","Authorization","then","res","data","catch","error","deleteComment","x","info","delete","get","render","OnlineUser","username","created_at","picture","postDescription","map"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport axios from 'axios';\nimport '../styles/posts.css'\nimport Back from '../Images/back.jpg'\n\nimport { Link } from 'react-router-dom';\n\nexport default class Post extends React.Component {\n    state = {\n        post: [],\n        comments: [],\n        comment: {\n            notes: localStorage.getItem( 'username' ),\n            postId: window.location.pathname.toString().replace( '/' , '' ).replace( 'Post' , '' ).replace( '/' , '' ),\n            commentDescription: ''\n        }\n    };\n\n    componentDidMount() {\n        const raw = window.location.pathname.toString() \n        const id = raw.replace( '/' , '' ).replace( 'Post' , '' ).replace( '/' , '' )\n        const token = localStorage.getItem( 'jwt' )\n        axios\n            .get(`http://localhost:3000/posts/${id}` , { headers: { Authorization: token }} )\n            .then(res => {\n                console.log( res.data.comments )\n                this.setState({\n                    post: res.data\n                });\n            })\n            .catch(error => console.error(error));\n        axios\n            .get(`http://localhost:3000/posts/${id}/comments` , { headers: { Authorization: token }} )\n            .then(res => {\n                console.log( 'res.data' , res.data )\n                this.setState({\n                    comments: res.data\n                });\n            })\n            .catch(error => console.error(error));\n    }\n\n    deletePost = () => {\n        const raw = window.location.pathname.toString() \n        const id = raw.replace( '/' , '' ).replace( 'Post' , '' ).replace( '/' , '' )\n        const token = localStorage.getItem( 'jwt' )\n        this.componentDidMount();\n\n        for ( var i = 0; i < this.state.post.comments.length; i ++ ) {\n            console.log( this.state.post.comments[i] )\n        }\n        // axios\n        //     .delete(`http://localhost:3000/posts/${id}` , { headers: { Authorization: token }} )\n        //     .then(res => {\n        //         console.log( res.data )\n        //         this.props.history.push( '/Posts' )\n        //     })\n        //     .catch(error => console.error(error));\n    }\n\n    changeHandler = event => {\n        event.preventDefault();\n        this.setState({\n            comment: {\n                ...this.state.comment,\n                [ event.target.name ]: event.target.value\n            }\n        });\n    };\n\n    addComment = event => {\n        event.preventDefault();\n        const token = localStorage.getItem( 'jwt' )\n        axios\n            .post(`http://localhost:3000/comments` , this.state.comment , { headers: { Authorization: token }} )\n            .then(res => {\n                console.log( 'res.data' , res.data )\n                this.state.comment.commentDescription = ''\n                this.componentDidMount()\n            })\n            .catch(error => console.error(error));\n    }\n\n    deleteComment = ( x ) => {\n        console.log( x )\n        let info = { commentDescription: x.commentDescription , notes: x.notes , postId: x.postId }\n        const token = localStorage.getItem( 'jwt' )\n        axios\n            .delete(`http://localhost:3000/comments/${x.id}` , info , { headers: { Authorization: token }} )\n            .then(res => {\n                console.log( 'res.data' , res.data )\n                this.componentDidMount()\n            })\n            .catch(error => console.error(error));\n    }\n\n    render() {\n        \n        // const scrollToTop = () => {\n        //     const c = document.documentElement.scrollTop || document.body.scrollTop;\n        //     if (c > 0) {\n        //         window.requestAnimationFrame(scrollToTop);\n        //         window.scrollTo(0, c - c / 8);\n        //     }\n        // };\n\n        const OnlineUser = localStorage.getItem( 'username' )\n\n        return (\n            <>\n                <div className = 'posts'>\n                        <div key = {this.state.post.id} className = 'post'>\n                            <div>\n                                <h4 className = 'username'>{this.state.post.username}</h4>\n                                <p className = 'date'>{this.state.post.created_at}</p>\n                                <Link to = '/Posts'><img src = {Back} className = 'back'/></Link>\n                            </div>\n                            { this.state.post.picture === null ?  null : ( <img src = {this.state.post.picture} alt = 'profile' className = \"Picture\"/> ) }\n                            <p className = 'postContent'>{this.state.post.postDescription}</p>\n                            { this.state.post.username === OnlineUser ? ( \n                                <div className = 'options'>\n                                    <Link to = {`/EditPost/${this.state.post.id}`}><button>Edit</button> </Link>\n                                    <button onClick = { () => this.deletePost() }>Delete</button> \n                                </div>\n                            ) : null }\n                        </div>\n                        <div className = 'commentsContainer'>\n\n                            <form onSubmit = { this.addComment } >\n                                <input\n                                    id = 'commentDescription'\n                                    type = 'text'\n                                    name = 'commentDescription'\n                                    value = { this.state.comment.commentDescription }\n                                    placeholder = 'Add Comment'\n                                    onChange = { this.changeHandler }\n                                />\n\n                                <button type = 'submit' className = 'submitButton' > Done </button>\n\n                            </form>\n\n                            <h4>Comments</h4>\n                            { this.state.comments.map((x) =>\n                                <div key = {x.id} className = 'individual'> \n                                    <div className = 'commentContent'>\n                                        <strong><p className = 'notes'>{x.notes}</p></strong>\n                                        <p className = 'comment'>{x.commentDescription}</p>\n                                    </div>\n                                    <div className = 'deleteButton'>\n                                        { x.notes === OnlineUser ? ( <button onClick = { () => this.deleteComment( x ) }>Delete</button> ) : null }\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}